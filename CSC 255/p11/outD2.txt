addEdge(10,20,4) returned: True
addEdge(30,40,4) returned: True
Graph info:
  Graph size = 40
  vCount = 4
  eCount = 2

Graph contents:
  Node(0,10):  0  4  0  0
  Node(1,20):  0  0  0  0
  Node(2,30):  0  0  0  4
  Node(3,40):  0  0  0  0
Degree table (normal, in, out)
  Node(0,10):    -1,  0,  1
  Node(1,20):    -1,  1,  0
  Node(2,30):    -1,  0,  1
  Node(3,40):    -1,  1,  0
10 does not have a path to 10
10 does have a path to 20
10 does not have a path to 30
10 does not have a path to 40
20 does not have a path to 10
20 does not have a path to 20
20 does not have a path to 30
20 does not have a path to 40
30 does not have a path to 10
30 does not have a path to 20
30 does not have a path to 30
30 does have a path to 40
40 does not have a path to 10
40 does not have a path to 20
40 does not have a path to 30
40 does not have a path to 40
*** start of bfPrint() output
   Printing from 10
       Item 0 is (0,10)
       Item 1 is (1,20)
   Printing from 20
       Item 0 is (1,20)
   Printing from 30
       Item 0 is (2,30)
       Item 1 is (3,40)
   Printing from 40
       Item 0 is (3,40)
*** end of bfPrint() output
*** start of minPath output
   MinPaths for 10
      to 10: 0
      to 20: 4
      to 30: 1000000
      to 40: 1000000
   MinPaths for 20
      to 10: 1000000
      to 20: 0
      to 30: 1000000
      to 40: 1000000
   MinPaths for 30
      to 10: 1000000
      to 20: 1000000
      to 30: 0
      to 40: 4
   MinPaths for 40
      to 10: 1000000
      to 20: 1000000
      to 30: 1000000
      to 40: 0
*** end of minPath() output
*** start of isCyclic output
    The graph is acyclic
*** end of isCyclic output
